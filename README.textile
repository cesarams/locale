h1. CakePHP Locale

Este plugin permite que usuários de seu sistema visualizem e insiram
dados em formatos locais/regionais ao mesmo tempo que garante a consistência
dos dados convertendo-o para um formato aceito pelo banco de dados escolhido.

h2. Autor e Copyright

* *Copyright 2009-2012,* "*Radig - Soluções em TI*":http://www.radig.com.br
* Licença MIT - Isto quer dizer que o código está disponível sem nenhuma garantia, ao mesmo tempo que
você pode usa-lo de forma isolada ou em conjunto com seu próprio código.

h2. Observações

* Este behavior requer PHP versão >= 5.2.4
* Compatível com o CakePHP 1.3
* Consulte os testes incluído no plugin para ver melhor seu funcionamento

h2. Como usar

* A única configuração necessária é ter definido o locale da sua aplicação. Caso não tenha feito isso, basta utilizar a função _setlocale_

bc. setlocale(LC_ALL, 'pt_BR.utf-8', 'pt_BR', 'pt-br');

h3. Utilizando o Behavior

* Basta definir, no model que deseja ativa-lo, a seguinte linha:

bc. $actsAs = array('Locale.Locale');

* A partir daí o behavior vai converter seus dados antes da validação e antes de salvar.

h3. Utilizando o Helper

* Nos controladores de interesse, adicione o helper _Locale.Locale_, deixando similar a linha abaixo:

bc. $helpers = array('Locale.Locale');

* Agora nas views de seu controlador, você pode chamar o helper, como abaixo:

bc. echo $this->Locale->dateTime('2010-08-26');

h3. Além do Behavior e Helper...

Agora você também pode trabalhar com a normalização de desnormalização de dados em diferentes contextos
de sua aplicação (como em Shells), bastando para isso carregar as libs Localize e Unlocalize, de acordo
com suas necessidades.

bc. App::import('Lib', 'Locale.Localize');

Elas são todas estáticas, então você deve usa-las sem se preocupar com instâncias:

bc. $localizada = Localize::date('2012-04-16');

Desta forma, a variável _$localizada_ armazenará _"16/04/2012"_ caso seu locale esteja definido para pt_BR